When 2 colliders collides with a collider, a method is called

private void OnCollisionEnter(Collision collision)
{

}

NOTE: Difference between OnTriggerEnter and OnCollisionEnter is that
	  if we set the OnTrigger of the body to true, then we have just marked a zone
	  to that body. Think of it as a ghost. It exists and it has a zone (outer walls
	  using the collider) but we can pass through it. As soon as we start passing
	  through it, OnTriggerEnter is called. OnCollisionEnter is called when the body is a
	  solid body and elastic collision is there. So if a body bounces of, it has collided.
	  So, OnCollisionEnter is called.



// Example usage:
	private void OnTriggerEnter(Collider other)
	{
		if (other.CompareTag("Powerup"))
		{
			hasPowerup = true;
			Destroy(other.gameObject);
		}
	}

	private void OnCollisionEnter(Collision collision)
	{
		if (collision.gameObject.CompareTag("Enemy") && hasPowerup)
		{
			Rigidbody enemyRigidBody = collision.gameObject.GetComponent<Rigidbody>();
            Vector3 awayFromPlayer = collision.gameObject.transform.position - transform.position;
            enemyRigidBody.AddForce(awayFromPlayer * powerupStrength, ForceMode.Impulse);
		}
	}
