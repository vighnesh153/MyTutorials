Command:
	ng generate directive directive-name

	Shortcut:
		ng g d directive-name


This creates a directive with name = 'directive-name'.
In the 'directive-name.directive.ts' file, the following code is found:
	import { Directive } from '@angular/core';

	@Directive({
		selector: '[appTestDirective]'         // CSS type selector which selects all elements that
											   // have 'appTestDirective' directive.
	})
	export class TestDirectiveDirective {
		constructor() { }
	}

We also need to register this directive in the parent module in the 'declarations' property alongside
components.

To access the element that has this directive, in the constructor of the directive:
	constructor(private elementRef: ElementRef) { }
	ngOnInit() {
		this.elementRef.nativeElement.style.backgroundColor = 'green';
	}
NOTE: The above is not a good practice to access DOM elements because angular also uses service
	  workers to get some things done. Those service workers might not have access to DOM elements.
	  So, it is better to use the following method.

Better way to access DOM elements:
	constructor(private elementRef: ElementRef, private renderer: Renderer2) { }
	// Renderer2 needs to be imported from '@angular/core'

	ngOnInit() {
		this.renderer.setStyle(
			this.elementRef.nativeElement,
			'background-color',
			'green'
		);
	}
