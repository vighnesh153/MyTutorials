Command:
	ng generate component component-name

	Shortcut:
		ng g c component-name


When we run the above command, angular creates a component in the 'angular-app-name/src/app/'.

'app' is the root component of the angular-app. And new components are created in it.

After that, we need to add component's class's name in the 'angular-app-name/src/app/app.module.ts'
file. That file has a class that is being exported at the end. That class has a decorator which takes
in an object as an argument. That object has a property called 'declarations' and the value of that
property is an array of components. So, append the component's class's name to that array.
The command used above should do it automatically but if it doesn't then we can add it manually.

NOTE: If the component's name is 'server', then the component's class's name will be 'ServerComponent'.
	  It is angular's convention.


To create a component inside another folder which is in 'app' component or directory, let's say 'header',
	ng g c header/new-component
This will create the 'new-component' inside the header component or directory.
NOTE: We cannot create a component outside of the 'app' component, at least as far as I know. I will
 	  update this 'NOTE' if it is incorrect.



Creating a component also creates a 'some-component.spec.ts' file, which is a testing file. If we
don't want that, the we can do:
	ng g c new-component --spec false
