Cookies are small files which are stored on a user's computer. They are
designed to hold a modest amount of data specific to a particular client and
website, and can be accessed either by the web server or the client computer.


To set a cookie:
	In the middleware,
		(req, res, next) => {
			res.setHeader("Set-Cookie", "key=value");
			res.render('home');
		}

Now, the cookie will be saved on the user's browser. Every time the user makes any
request, the cookie will be automatically added to the request information.


To access the cookie:
	In the middleware,
		(request, response, next) => {
			const all_cookies = req.get('Cookie');
			// console log all_cookies do some string manipulation to access specific
			// cookies' value.
		}


To set the age of the cookie:
	res.setHeader("Set-Cookie", "key=value; Max-Age=10");
	// In seconds
	// If not set, then the cookie will expire after the browser is closed.


To domain where the cookie should be sent:
	res.setHeader("Set-Cookie", "key=value; Domain=www.google.com");
	NOTE: indicates the domain of the cookie; use it to compare against the
		  domain of the server in which the URL is being requested. If they match,
		  then check the path attribute next.


To make sure that the browser only sends the cookie over HTTPS.
	res.setHeader("Set-Cookie", "key=value; Secure");


To avoid usage of cookies in the client-side Javascript, we do the following:
	res.setHeader("Set-Cookie", "key=value: HttpOnly");
	// Ensures the cookie is sent only over HTTP(S), not client JavaScript,
	// helping to protect against cross-site scripting attacks.
