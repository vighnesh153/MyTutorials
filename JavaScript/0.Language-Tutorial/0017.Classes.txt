ES6, also known as ECMAScript2015, introduced classes.
A class is a type of function, but instead of using the keyword function to initiate it, we use the
keyword class, and the properties is assigned inside a constructor() method.

Example:
	class Car {
		constructor(brand) {
			this.carname = brand;
		}
	}

	let mycar = new Car("Ford");

NOTE: The constructor method is called automatically when the object is initialized.



Methods:
	class Car {
		constructor(brand) {
			this.carname = brand;
		}
		present() {
			return "I have a " + this.carname;
		}
	}



Static Methods:
	class Car {
		constructor(brand) {
			this.carname = brand;
		}
		static hello() {
			return "Hello!!";
		}
	}



Inheritance:
	class Car {
		constructor(brand) {
			this.carname = brand;
		}
		present() {
			return 'I have a ' + this.carname;
		}
	}

	class Model extends Car {
		constructor(brand, mod) {
			super(brand);
			this.model = mod;
		}
		show() {
			return this.present() + ', it is a ' + this.model;
		}
	}



Getters and Setters:
	class Car {
		constructor(brand) {
			this.carname = brand;
		}
		get cnam() {
			return this.carname;
		}
		set cnam(x) {
			this.carname = x;
		}
	}

NOTE: even if the getter is a method, you do not use parentheses when you want to get the property value.
