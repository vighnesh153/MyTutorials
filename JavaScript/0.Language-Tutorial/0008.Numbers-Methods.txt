The toExponential() Method

    toExponential() returns a string, with a number rounded and written using exponential notation.

    A parameter defines the number of characters behind the decimal point:
        var x = 9.656;
        x.toExponential(2);     // returns 9.66e+0
        x.toExponential(4);     // returns 9.6560e+0
        x.toExponential(6);     // returns 9.656000e+0

    The parameter is optional. If you don't specify it, JavaScript will not round the number.



The toFixed() Method

    toFixed() returns a string, with the number written with a specified number of decimals:
        var x = 9.656;
        x.toFixed(0);           // returns 10
        x.toFixed(2);           // returns 9.66
        x.toFixed(4);           // returns 9.6560
        x.toFixed(6);           // returns 9.656000

    NOTE: toFixed(2) is perfect for working with money.



The toPrecision() Method

    toPrecision() returns a string, with a number written with a specified length:
        var x = 9.656;
        x.toPrecision();        // returns 9.656
        x.toPrecision(2);       // returns 9.7
        x.toPrecision(4);       // returns 9.656
        x.toPrecision(6);       // returns 9.65600




Converting Variables to Numbers:
    The Number() method
    The parseInt() method
    The parseFloat() method


    1. The Number() Method
        Number() can be used to convert JavaScript variables to numbers:

            Number(true);          // returns 1
            Number(false);         // returns 0
            Number("10");          // returns 10
            Number("  10");        // returns 10
            Number("10  ");        // returns 10
            Number(" 10  ");       // returns 10
            Number("10.33");       // returns 10.33
            Number("10,33");       // returns NaN
            Number("10 33");       // returns NaN
            Number("John");        // returns NaN
            Number(new Date("2017-09-30"));    // returns 1506729600000
            NOTE: The Number() method above returns the number of milliseconds since 1.1.1970.

        NOTE: If the number cannot be converted, NaN (Not a Number) is returned.

    2. The parseInt() Method
        parseInt() parses a string and returns a whole number. Spaces are allowed. Only the first
        number is returned:

            parseInt("10");         // returns 10
            parseInt("10.33");      // returns 10
            parseInt("10 20 30");   // returns 10
            parseInt("10 years");   // returns 10
            parseInt("years 10");   // returns NaN

        NOTE: If the number cannot be converted, NaN (Not a Number) is returned.

    3. The parseFloat() Method
        parseFloat() parses a string and returns a number. Spaces are allowed. Only the first
        number is returned:

            parseFloat("10");        // returns 10
            parseFloat("10.33");     // returns 10.33
            parseFloat("10 20 30");  // returns 10
            parseFloat("10 years");  // returns 10
            parseFloat("years 10");  // returns NaN

        NOTE: If the number cannot be converted, NaN (Not a Number) is returned.



Self-Describing Methods:
    let number = some_number;

    Number.isFinite(number);        // returns true or false
    Number.isInteger(number);       // returns true or false
    Number.isNaN(number);           // returns true or false
    Number.isSafeInteger(number);   // returns true or false
    
