SQLite engine is supported by both Android and IOS.

Package:
	https://pub.dev/packages/sqflite

Helper Setup:
	import 'package:flutter_great_places_app/providers/great_places.dart';
	import 'package:sqflite/sqflite.dart' as sql;
	import 'package:path/path.dart' as path;

	class DBHelper {
	  static Future<sql.Database> database() async {
	    // directory where the DB is
	    final dbPath = await sql.getDatabasesPath();

	    // opens if exists, else creates and opens
	    return sql.openDatabase(
	      path.join(dbPath, 'places.db'),
	      onCreate: (db, version) {
	        return db.execute(
	            'CREATE TABLE ${GreatPlaces.tableName}(id TEXT PRIMARY KEY, title TEXT, image TEXT)');
	      },
	      version: 1, // To override in future after updates to app maybe
	    );
	  }

	  static Future<void> insert(String table, Map<String, Object> data) async {
	    final sqlDb = await DBHelper.database();

	    // if entry with same id exists, then override
	    // that entry with this one
	    await sqlDb.insert(
	      table,
	      data,
	      conflictAlgorithm: sql.ConflictAlgorithm.replace,
	    );
	  }

	  static Future<List<Map<String, dynamic>>> getData(String table) async {
	    final sqlDb = await DBHelper.database();
	    return sqlDb.query(table);
	  }
	}


// Insert:
	DBHelper.insert(tableName, {
	  'id': newPlace.id,
	  'title': newPlace.title,
	  'image': newPlace.image.path,
	});


// Retrieve:
	Future<void> fetchAndSetPlaces() async {
		final dataList = await DBHelper.getData(tableName);

		_items = dataList.map((item) => Place(
		  id: item['id'],
		  title: item['title'],
		  image: File(item['image']),
		  location: null,
		)).toList();

		notifyListeners();
	}
